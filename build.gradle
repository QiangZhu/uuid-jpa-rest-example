buildscript {
    ext { springBootVersion = '1.4.0.M2' }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

configurations { instrument { description 'classpath for instrument as java agent' } }

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

dependencies {
    // Tooling
    instrument 'org.springframework:spring-instrument'
    compileOnly 'org.projectlombok:lombok:1.16.8'

    // Database
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    { 
        exclude module: 'hibernate-entitymanager'
    }
    compile 'org.eclipse.persistence:javax.persistence:2.1.0'
    runtime 'org.eclipse.persistence:org.eclipse.persistence.jpa:2.6.1'

    runtime 'com.h2database:h2'
    runtime 'mysql:mysql-connector-java'

    // REST
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    runtime 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    runtime 'org.springframework.data:spring-data-rest-hal-browser'

    // Util
    compile 'com.google.guava:guava:19.0'
    compile 'com.fasterxml.uuid:java-uuid-generator:3.1.3'

    // Testing
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testRuntime 'com.jayway.jsonpath:json-path:2.2.0'
}

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}

eclipse {
    wtp {
        facet {
            facet name: 'jpt.jpa', version: '2.1'
        }
    }
}

test { jvmArgs "-javaagent:$project.configurations.instrument.singleFile" }

bootRun {
    jvmArgs "-javaagent:$project.configurations.instrument.singleFile"
    systemProperties = System.properties
}

task copySpringInstrumentJar (type:Copy) {
    description = 'Copies the spring-instrument.jar into your lib directory.'
    outputs.file project.file('lib/spring-instrument.jar')
    from (project.configurations.instrument)
    into("lib")
    rename { String filename -> filename = 'spring-instrument.jar' }
}

tasks.idea.dependsOn(project.tasks.copySpringInstrumentJar)
tasks.eclipse.dependsOn(project.tasks.copySpringInstrumentJar)
tasks.processResources.dependsOn(project.tasks.copySpringInstrumentJar)
